# Generated by Django 2.0.2 on 2018-04-01 05:57

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.query_utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='CreditNote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('company_addr', models.TextField(blank=True, null=True)),
                ('total_ex_vat', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=7)),
                ('total_vat', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=7)),
                ('reason', models.CharField(choices=[('Mistake', 'Order created by mistake'), ('Refunded', 'Purchaser requested refund'), ('Entitled to Free', 'Purchaser entitled to a free ticket'), ('Payment Bounced', 'Payment did not complete'), ('Chargeback', 'Payment chargeback received'), ('Wrong ticket type', 'Ticket booked was of wrong type'), ('Attendance Refused', 'Organisers or venue denied entry'), ('Breach of CoC', 'Organisers removed attendee from conference'), ('Issues with travel Visa', 'Attendee could not get travel visa'), ('Issues with travel', 'Attendee could not arrange travel to conference'), ('Issues with accommodation', 'Attendee could not attend conference due lack of available accommodation')], max_length=30)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CreditNoteRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_ex_vat', models.DecimalField(decimal_places=2, max_digits=7)),
                ('vat_rate', models.DecimalField(choices=[(Decimal('20'), 'Standard 20%'), (Decimal('0'), 'Zero Rated')], decimal_places=2, max_digits=4)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.ContentType')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rows', to='payments.CreditNote')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company_name', models.CharField(blank=True, max_length=200, null=True)),
                ('company_addr', models.TextField(blank=True, null=True)),
                ('total_ex_vat', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=7)),
                ('total_vat', models.DecimalField(decimal_places=2, default=Decimal('0'), max_digits=7)),
                ('purchaser', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='invoices', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='InvoiceRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('total_ex_vat', models.DecimalField(decimal_places=2, max_digits=7)),
                ('vat_rate', models.DecimalField(choices=[(Decimal('20'), 'Standard 20%'), (Decimal('0'), 'Zero Rated')], decimal_places=2, max_digits=4)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.ContentType')),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='rows', to='payments.Invoice')),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('method', models.CharField(choices=[('S', 'Stripe')], max_length=1)),
                ('status', models.CharField(choices=[('SUC', 'Successful'), ('FLD', 'Failed'), ('ERR', 'Errored'), ('RFD', 'Refunded'), ('CBK', 'Chargeback')], max_length=3)),
                ('charge_id', models.CharField(max_length=80)),
                ('charge_failure_reason', models.CharField(blank=True, max_length=400)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=7)),
                ('content_type', models.ForeignKey(limit_choices_to=django.db.models.query_utils.Q(django.db.models.query_utils.Q(('app_label', 'payments'), ('model', 'invoice'), _connector='AND'), django.db.models.query_utils.Q(('app_label', 'payments'), ('model', 'credit_note'), _connector='AND'), _connector='OR'), on_delete=django.db.models.deletion.DO_NOTHING, to='contenttypes.ContentType')),
            ],
        ),
        migrations.AddField(
            model_name='creditnote',
            name='invoice',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='credit_note', to='payments.Invoice'),
        ),
        migrations.AddField(
            model_name='creditnote',
            name='purchaser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='creditnotes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='invoicerow',
            unique_together={('parent', 'content_type', 'object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='creditnoterow',
            unique_together={('parent', 'content_type', 'object_id')},
        ),
    ]
